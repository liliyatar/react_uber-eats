{"version":3,"sources":["store/actions.js","store/index.js","components/RestaurantCard/RestaurantCard.js","components/RestaurantsListPage/RestaurantsListPage.js","store/selectors.js","components/RestaurantsListPage/index.js","App.js","index.js"],"names":["ACTION_TYPES","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","initialState","restaurantsListData","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread2","payload","applyMiddleware","apply","RestaurantCard","props","imageUrl","title","categories","etaRange","react_default","a","createElement","className","src","alt","join","defaultProps","RestaurantsListPage","_ref","restaurantsData","loadRestaurants","useEffect","map","restaurant","uuid","heroImageUrl","RestaurantCard_RestaurantCard_RestaurantCard","key","text","selectRestaurantsList","createSelector","feedItems","storesMap","_ref2","mapDispatchToProps","dispatch","fetch","then","response","json","data","saveRestaurants","Enhanced","connect","App","es","ReactDOM","render","src_App","document","getElementById"],"mappings":"qQAAaA,EACO,mBCGdC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAc,CAACC,KAEfC,EAAe,CACnBC,oBAAqB,MAiBVC,EAAQC,YAdL,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,KAAKhB,EACH,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,oBAAqBO,EAAOI,UAIhC,QACE,OAAOR,IAMXV,EAAiBmB,IAAeC,WAAf,EAAmBhB,KCvBzBiB,eAAiB,SAACC,GAAU,IAErCC,EAKED,EALFC,SACAC,EAIEF,EAJFE,MACAC,EAGEH,EAHFG,WACAC,EAEEJ,EAFFI,SAIF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKR,EAAUS,IAAKR,EAAOM,UAAU,yBAC1CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,GACxCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZL,EAAWQ,KAAK,aAEnBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZJ,MAcTL,EAAea,aAAe,CAC5BT,WAAY,GACZC,SAAU,cC9BCS,EAAsB,SAAAC,GAA0C,IAAvCC,EAAuCD,EAAvCC,gBAAiBC,EAAsBF,EAAtBE,gBAKrD,OAJAC,oBAAU,WACRD,KACC,IAGDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZO,EAAgBG,IAAI,SAACC,GAAe,IAEjCC,EAKED,EALFC,KACAlB,EAIEiB,EAJFjB,MACAmB,EAGEF,EAHFE,aACAlB,EAEEgB,EAFFhB,WACAC,EACEe,EADFf,SAGF,OACEC,EAAAC,EAAAC,cAACe,EAAD,CACEC,IAAKH,EACLA,KAAMA,EACNlB,MAAOA,EACPD,SAAUoB,EACVlB,WAAYA,EACZC,SAAUA,EAAWA,EAASoB,KAzBhB,oBAsC1BX,EAAoBD,aAAe,CACjCG,gBAAiB,gBCxCNU,EAAwBC,YAFhB,SAAAtC,GAAK,OAAIA,GAI5B,SAAA0B,GAA6B,IAA1B7B,EAA0B6B,EAA1B7B,oBACD,IAAKA,EACH,MAAO,GAFkB,IAKnB0C,EAAyB1C,EAAzB0C,UAAWC,EAAc3C,EAAd2C,UAEnB,OAAOD,EAAUT,IAAI,SAAAW,GAAA,IAAGT,EAAHS,EAAGT,KAAH,OAAcQ,EAAUR,OCJ3CU,EAAqB,CACzBd,gBLD6B,kBAAM,SAACe,GACpCC,MAAM,+DACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAnB,GAAc,IAAXsB,EAAWtB,EAAXsB,KACPL,EATkB,SAAAK,GAAI,MAAK,CAC/B3C,KAAMhB,EACNmB,QAASwC,GAOIC,CAAgBD,SKAzBE,EAAWC,YARO,SAAAnD,GAAK,MAAK,CAChC2B,gBAAiBU,EAAsBrC,KASvC0C,EAFeS,CAGf1B,GCEa2B,EAZH,kBACVnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAUvD,MAAOA,GACfmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACdH,EAAAC,EAAAC,cAAC+B,EAAD,OAEFjC,EAAAC,EAAAC,cAAA,qCCRNmC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5d907bbf.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE_RESTAURANTS: 'SAVE_RESTAURANTS',\n};\n\nconst saveRestaurants = data => ({\n  type: ACTION_TYPES.SAVE_RESTAURANTS,\n  payload: data,\n});\n\nexport const loadRestaurants = () => (dispatch) => {\n  fetch('https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants')\n    .then(response => response.json())\n    .then(({ data }) => {\n      dispatch(saveRestaurants(data));\n    });\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTION_TYPES } from './actions';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = [thunk];\n\nconst initialState = {\n  restaurantsListData: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_RESTAURANTS: {\n      return {\n        ...state,\n        restaurantsListData: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RestaurantCard.scss';\n\nexport const RestaurantCard = (props) => {\n  const {\n    imageUrl,\n    title,\n    categories,\n    etaRange,\n    // uuid,\n  } = props;\n\n  return (\n    <div className=\"restaurant-card\">\n      <img src={imageUrl} alt={title} className=\"restaurant-card__img\" />\n      <h2 className=\"restaurant-card__title\">{title}</h2>\n      <div className=\"restaurant-card__categories\">\n        {categories.join(' â€¢ ')}\n      </div>\n      <div className=\"restaurant-card__eta\">\n        {etaRange}\n      </div>\n    </div>\n  );\n};\n\nRestaurantCard.propTypes = {\n  // uuid: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string),\n  etaRange: PropTypes.string,\n};\n\nRestaurantCard.defaultProps = {\n  categories: [],\n  etaRange: '',\n};\n","import React, { useEffect } from 'react';\nimport Proptypes from 'prop-types';\nimport { RestaurantCard } from '../RestaurantCard';\nimport './RestaurantsListPage.scss';\n\nconst DEFAULT_ETA_RANGE = '20 - 30 min';\n\nexport const RestaurantsListPage = ({ restaurantsData, loadRestaurants }) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, []);\n\n  return (\n    <div className=\"restaurant-list\">\n      {restaurantsData.map((restaurant) => {\n        const {\n          uuid,\n          title,\n          heroImageUrl,\n          categories,\n          etaRange,\n        } = restaurant;\n\n        return (\n          <RestaurantCard\n            key={uuid}\n            uuid={uuid}\n            title={title}\n            imageUrl={heroImageUrl}\n            categories={categories}\n            etaRange={etaRange ? etaRange.text : DEFAULT_ETA_RANGE}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nRestaurantsListPage.propTypes = {\n  restaurantsData: Proptypes.arrayOf(Proptypes.shape({})),\n  loadRestaurants: Proptypes.func.isRequired,\n};\n\nRestaurantsListPage.defaultProps = {\n  restaurantsData: [],\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData }) => {\n    if (!restaurantsListData) {\n      return [];\n    }\n\n    const { feedItems, storesMap } = restaurantsListData;\n\n    return feedItems.map(({ uuid }) => storesMap[uuid]);\n  },\n);\n","import { connect } from 'react-redux';\nimport { RestaurantsListPage } from './RestaurantsListPage';\nimport { loadRestaurants } from '../../store/actions';\nimport { selectRestaurantsList } from '../../store/selectors';\n\nconst mapStateToProps = state => ({\n  restaurantsData: selectRestaurantsList(state),\n});\n\nconst mapDispatchToProps = {\n  loadRestaurants,\n};\n\nconst Enhanced = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RestaurantsListPage);\n\nexport { Enhanced as RestaurantsListPage };\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport './styles/index.scss';\nimport { RestaurantsListPage } from './components/RestaurantsListPage';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"page\">\n      <header>Uber Eats Header</header>\n      <main className=\"content\">\n        <RestaurantsListPage />\n      </main>\n      <footer>Uber Eats Footer</footer>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}